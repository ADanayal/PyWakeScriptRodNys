from custom_functions import *
import numpy as np
import xarray as xr
import matplotlib.pyplot as plt
from py_wake.wind_turbines import WindTurbine, WindTurbines
from py_wake.wind_turbines.power_ct_functions import PowerCtTabular
from py_wake.site.shear import PowerShear
from py_wake.deficit_models.noj import NOJDeficit
from py_wake.site import XRSite
from py_wake.literature.noj import Jensen_1983
from py_wake.literature.gaussian_models import Bastankhah_PorteAgel_2014
from py_wake.literature.turbopark import Nygaard_2022
from mpl_toolkits.axes_grid1.inset_locator import inset_axes
from matplotlib import colors as mcolors

#-----------------------Wind Turbines setup---------------------------

u = [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 
        12, 12.5, 13, 13.5, 14, 14.5, 15, 15.5, 16, 16.5, 17, 17.5, 18, 18.5, 19, 19.5, 20, 20.5, 21, 21.5, 
        22, 22.5, 23, 23.5, 24, 24.5, 25]

# Rodsand 2 Power and Ct values
power_Rod = [0, 0, 0, 0, 0, 0, 0, 26, 53, 100, 163, 278, 393, 537, 682, 860, 1039, 1234, 1430, 1580, 1730, 1885, 2040, 2140, 
            2241, 2280, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 
            2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300]


ct_Rod = [0, 0, 0, 0, 0, 0, 0, 0, 0.89, 0.885, 0.88, 0.88, 0.88, 0.88, 0.88, 0.865, 0.85, 0.805, 0.76, 0.655, 0.55, 
        0.49, 0.38, 0.335, 0.29, 0.265, 0.22, 0.205, 0.18, 0.16, 0.14, 0.14, 0.12, 0.11, 0.1, 0.095, 0.09, 0.08, 
        0.07, 0.07, 0.07, 0.065, 0.06, 0.055, 0.05, 0.05, 0.05, 0.045, 0.04, 0.04, 0.04]


# Nysted Power and Ct values
power_Nys = [0, 0, 0, 0, 0, 0, 0, 22, 56, 100, 148, 216, 288, 380, 476, 603, 729, 892, 1055, 1237, 1419, 1594, 1769, 1910, 
            2041, 2130, 2198, 2240, 2267, 2285, 2291, 2295, 2298, 2299, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 
            2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300]

# Orignal Thrust coefficent values for the Nysted Bonus 2.3 Turbine
ct_Nys = [0, 0, 0, 0.58, 1.16, 1.065, 0.97, 0.91, 0.85, 0.865, 0.88, 0.89, 0.9, 0.905, 0.91, 0.905, 
        0.9, 0.87, 0.84, 0.815, 0.79, 0.77, 0.75, 0.69, 0.63, 0.535, 0.44, 0.39, 0.34, 0.305, 0.27, 
        0.245, 0.22, 0.2, 0.18, 0.165, 0.15, 0.14, 0.13, 0.12, 0.11, 0.105, 0.1, 0.095, 0.09, 0.085, 
        0.08, 0.075, 0.07, 0.075, 0.08]


# Re-evaluated Thrust coefficent values for the Nysted Bonus 2.3 Turbine
ct_Nys_HighRPM = np.array([0,0,0,0,0,0,0,0,0,1.091354467,1.034870317,1.006628242,0.980403458,0.956195965,
                 0.934005764,0.911815562,0.867435159,0.845244957,0.798847262,0.764553314,0.724207493,
                 0.687896254,0.661671470,0.633429395,0.621325648,0.587031700,0.530547550,0.486167147,
                 0.461959654,0.427665706,0.391354467,0.334870317,0.316714697,0.298559078,0.276368876,
                 0.262247839,0.250144092,0.238040346,0.225936599,0.209798271,0.199711816,0.189625360,
                 0.185590778,0.181556196,0.169452450,0.157348703,0.153314121,0.149279539,0.143227666,
                 0.141210375,0.141210375])

ct_Nys_LOWRPM = np.array([0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,
                 1.278962536,1.172046110,1.075216138,0.998559078,0.938040346,0.883573487,0.855331412,
                 0.800864553,0.746397695,0.724207493,0.691930836,0.665706052,0.637463977,0.621325648,
                 0.587031700,0.516426513,0.488184438,0.453890490,0.433717579,0.391354467,0.330835735,
                 0.320749280,0.286455331,0.280403458,0.272334294,0.250144092,0.244092219,0.221902017,
                 0.211815562,0.193659942,0.189625360,0.187608069,0.183573487,0.171469741,0.159365994,
                 0.157348703,0.145244957,0.141210375,0.000000000,0.000000000,0.000000000,0.000000000,
                 0.000000000,0.000000000])


# Adapted Thrust coefficent values for the Nysted Bonus 2.3 Turbine
ct_Nys_total = (ct_Nys_HighRPM+ct_Nys_LOWRPM)/2

# Function which assignes the correct chracteristics for each turbine. 
# Flexibly allows for more turbine types to be added.
def get_wind_turbines():

    Rod2Turbine = WindTurbine(name = 'Rod2Turbine',
                                    diameter = 92.6,
                                    hub_height = 68.5,
                                    powerCtFunction = PowerCtTabular(u,power_Rod,'KW',ct_Rod)
                                    )

    NysTurbine = WindTurbine(name = 'Nysted1TUrbine',
                                    diameter = 82.4,
                                    hub_height = 68,
                                    powerCtFunction = PowerCtTabular(u,power_Nys,'KW',ct_Nys_HighRPM)   #Change the Ct between High and Low
                                    )

    wind_Turbines = WindTurbines.from_WindTurbine_lst(
        [
        Rod2Turbine,
        NysTurbine
        ]
    )

    return wind_Turbines, Rod2Turbine

windTurbines,_ = get_wind_turbines()

# --------------------------- XRSite Setup ----------------------------
ti = 0.07  # Turbulence intensity value from LES dataset

#Rodsand 2 XRsite
wd_f_rod = np.array([0.04, 0.03, 0.06, 0.09, 0.09, 0.06, 0.07, 0.11, 0.14, 0.15, 0.12, 0.05]) #Accurate values of the Rodsand2 using GWA Data 
wd_coords_rod = np.linspace(0, 360, len(wd_f_rod), endpoint=False) # Makes an array givne len of wd_f, for the wind rose bins
A_rod = [7.47,7.57,9.56,9.83,9.23,8.57,9.21,10.78,11.90,11.30,9.96,8.15] # Ref Data from GWA 
k_rod = [2.260,2.307,2.248,2.357,2.311,2.221,2.045,2.615,2.697,2.357,2.205,2.100] # Ref Data from GWA 
Rod_XRSite = XRSite(
    ds=xr.Dataset(data_vars={'Sector_frequency': ('wd', wd_f_rod), 'Weibull_A': ('wd', A_rod), 'Weibull_k': ('wd', k_rod), 'TI': ti},
                  coords={'wd': wd_coords_rod}))

#Nysted 1 XRsite
wd_f_nys = np.array([0.03, 0.03, 0.06, 0.09, 0.09, 0.06, 0.06, 0.11, 0.14, 0.16, 0.1, 0.06]) #Accurate values of the Nysted using GWA Data 
wd_coords_nys = np.linspace(0, 360, len(wd_f_nys), endpoint=False) # Makes an array givne len of wd_f, for the wind rose bins
A_nys = [7.55,6.85,9.26,9.78,9.19,8.82,9.30,10.70,11.89,11.24,10.36,7.84] # Ref Data from GWA 
k_nys = [2.053,2.178,2.037,2.381,2.307,2.334,2.104,2.494,2.646,2.381,2.518,1.975]# Ref Data from GWA 
Nys_XRSite = XRSite(
    ds=xr.Dataset(data_vars={'Sector_frequency': ('wd', wd_f_nys), 'Weibull_A': ('wd', A_nys), 'Weibull_k': ('wd', k_nys), 'TI': ti},
                  coords={'wd': wd_coords_nys}))

#Rodsand2 and Nysted 1 Site
wd_f_RodNys = np.array([0.03, 0.03, 0.06, 0.09, 0.09, 0.06, 0.07, 0.11, 0.14, 0.16, 0.11, 0.05]) #Accurate values of the site considering both farms, using GWA Data 
wd_coords_RodNys = np.linspace(0, 360, len(wd_f_RodNys), endpoint=False) # Makes an array givne len of wd_f, for the wind rose bins
A_RodNys = [7.14, 7.73, 9.39, 9.78, 9.18, 8.68, 9.27, 10.69, 11.90, 11.26, 10.25, 7.80] # Ref Data from GWA 
k_RodNys = [1.865, 2.650, 2.127, 2.361, 2.295, 2.264, 2.088, 2.529, 2.658, 2.350, 2.389, 1.982] # Ref Data from GWA 

RodNys_XRSite = XRSite(
    ds=xr.Dataset(data_vars={'Sector_frequency': ('wd', wd_f_RodNys), 'Weibull_A': ('wd', A_RodNys), 'Weibull_k': ('wd', k_RodNys), 'TI': ti},
                  coords={'wd': wd_coords_RodNys}))


#-------------- Rodsand 2 and Nysted farm layout definition ----------

# x and y UTM points for the Nysted farm
Nysted_x = np.array([672420, 672438, 672456, 672475, 672493, 672511, 672529, 672548, 672566,673279, 673297, 673316, 
673334, 673352, 673371, 673389, 673407, 673426,674138, 674156, 674175, 674193, 674212, 674230, 674249, 674267, 674286,
674997, 675015, 675034, 675053, 675071, 675090, 675108, 675127, 675145,675856, 675875, 675893, 675912, 675930, 675949, 
675968, 675986, 676005,676715, 676734, 676752, 676771, 676790, 676808, 676827, 676846, 676865,677574, 677593, 677611, 
677630, 677649, 677668, 677687, 677706, 677724,678433, 678452, 678471, 678490, 678509, 678527, 678546, 678565, 678584])

Nysted_y = np.array([6050160, 6049679, 6049197, 6048716, 6048234, 6047753, 6047272, 6046790, 6046309, 6050043, 6049562, 
6049080, 6048599, 6048118, 6047636, 6047155, 6046674, 6046192, 6049926, 6049445, 6048963, 6048482, 6048001, 6047519, 
#6047038, 6046556, 6046075, 6049809, 6049328, 6048846, 6048365, 6047883, 6047402, 6047021, 6046439, 6045958, 6049692, 
6049211, 6048729, 6048248, 6047766, 6047285, 6046804, 6046323, 6045841, 6049575, 6049094, 6048612, 6048131, 6047649, 
6047168, 6046687, 6046205, 6045724, 6049458, 6048977, 6048495, 6048014, 6047532, 6047051, 6046570, 6046088, 6045607, 
6049341, 6048859, 6048378, 6047897, 6047415, 6046934, 6046453, 6045971, 6045490], dtype = float)

# x and y UTM points for the Rodsand 2 farm
Rodsand_x = np.array([660623, 661164, 661668, 662261, 662775, 663314, 663841, 664332, 664852, 665372, 
665833, 666345, 666828, 667313, 667777, 668257, 668727, 669201, 660189, 660729, 661277, 661833, 662355, 
662909, 663455, 663971, 664417, 665068, 665567, 666116, 666645, 667170, 667685, 668217, 668741, 669269, 
659755, 660293, 660841, 661405, 661934, 662505, 663070, 663610, 664182, 664766, 665301, 665935, 666463, 
667027, 667592, 668177, 668756, 669337, 659321, 659858, 660404, 660977, 661514, 662100, 662684, 663249, 
663847, 664463, 665036, 665657, 666280, 666884, 667500, 668137,  668821, 669405, 658887, 659422, 659968, 
660549, 661093, 661696, 662298, 662888, 663512, 664160, 664770, 665428, 666097, 666741, 667407, 668097, 668786, 669463])

Rodsand_y = np.array([6051247, 6050979, 6050759, 6050527, 6050346, 6050157, 6049978, 6049837, 6049714, 
6049580, 6049510, 6049419, 6049351, 6049299, 6049267, 6049238, 6049219, 6049234, 6050898, 6050585, 6050303, 
6050042, 6049815, 6049584, 6049362, 6049178, 6049043, 6048838, 6048727, 6048599, 6048494, 6048409, 6048346, 
6048287, 6048242, 6048235, 6050549, 6050192, 6049867, 6049557, 6049285, 6049010, 6048746, 6048519, 6048312, 
6048095, 6047944, 6047766, 6047636, 6047519, 6047424, 6047336, 6047266, 6047235, 6050200, 6049798, 6049431, 
6049072, 6048754, 6048437, 6048130, 6047859, 6047612, 6047353, 6047162, 6046959, 6046779, 6046629, 6046502,
6046386, 6046289, 6046236, 6049851, 6049405, 6049095, 6048587, 6048224, 6047851, 6047514, 6047200, 6046911, 
6046611, 6046379, 6046139, 6045922, 6045739, 6045580, 6045435, 6045313, 6045190], dtype = float)

#------------------- Layout with the shifted turbines -----------------

# Function which inputs the orginal x and y values per farm, and applies the shifting parameter
mooringMuliplier_Nys = {
    1: 0.1 * 82.4,
    2: 0.25 * 82.4,
    3: 0.5 * 82.4
} #Function allows for further shifting paramter to be added

def moor_array_Nys(array, case):

    Add = mooringMuliplier_Nys.get(case,0)
    rows_Nys = array.copy().reshape(-1, 9)

    for i in range(1, rows_Nys.shape[0], 2):
        rows_Nys[i] += Add

    return rows_Nys.flatten()
    
Nysted_y_moored = moor_array_Nys(Nysted_y, 3) #Applies the shift to every y value in nysted_y array

# Function which inputs the orginal x and y values per farm, and applies the shifting parameter
mooringMuliplier_Rod = {
    1: 0.1 * 92.6,
    2: 0.25 * 92.6,
    3: 0.5 * 92.6
} #Function allows for further shifting paramter to be added

def moor_array_Rod(array,case):
    Add = mooringMuliplier_Rod.get(case,0)
    new_array = array.copy()
    new_array[1::2] += Add

    return new_array

Rodsand_y_moored = moor_array_Rod(Rodsand_y,3) # Applies the shift to every y value in Rodsand_y array

## Shifted turbines
all_x = np.r_[Rodsand_x,Nysted_x]  # Concatenate x-positions
all_y = np.r_[Rodsand_y,Nysted_y]  # Concatenate y-positions
all_y_moored = np.r_[Rodsand_y_moored,Nysted_y_moored]  # Concatenate y-positions for shifted turbines
list_x = [Rodsand_x,Nysted_x,all_x]
list_y = [Rodsand_y,Nysted_y,all_y]
list_y_moored = [Rodsand_y_moored,Nysted_y_moored,all_y_moored]
list_types = [0,1]

types = [0]*len(Rodsand_x) + [1]*len(Nysted_x) #Uses the types function to define each turbine types with a single digit


# Defines the restricted wind heading and speed considered throughout the report
speedrange = [8.5,8.6,8.7,8.8,8.9,9,9.1,9.2,9.3,9.4,9.5] # 9 m/s +- 0.5

# For the verification of method, indexing the specific turbines which were compared to the SCADA and the Nygaard and Hansen output
neededturbinesNYS_alone = [4,13,22,31,40,49,58,67] # Index array when modelling the Nysted farm isolated
neededturbinesNYS_both = [94,103,112,121,130,139,148,157]
neededturbinesROD_both = [18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]
neededturbines_both = [18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,94,103,112,121,130,139,148,157] # When modelling the two farms

# SCADA data extrapolated from the Nygaard and Hansen, 2016 report
# 278 heading
rodsand_data = [1358.977500,1180.134978,1056.970111,945.5268561,854.5995626,828.1379928,810.4707725,751.7810521,675.5183366,
                757.4659710,657.7506095,698.6883070,698.6066452,695.5914396,695.5097778,721.7986015,739.2962165,753.8665693]
nysted_data_before = [1084.471299,940.7464989,890.7914522,834.9787404,785.0236937,740.9325937,690.9775469,696.7001559]
nysted_data_after = [891.0678461,867.4864257,829.2561315,796.8835023,761.5804703,723.3470352,708.5599645,670.3265295]	

# 98 heading - Uncomment this when wanting to change the sector direction:
# rodsand_data = [795.8545373,774.1377379,747.7600939,721.3824499,710.5452787,691.9396402,676.4416245,657.8324478,734.0358409,
#                 740.3088753,757.4485650,773.0397504,799.5093848,813.5426310,807.3686631,804.3046768,826.1111078,975.3772489]
# nysted_data_before = [747.1597979,744.1241162,770.6208759,817.3260291,859.3667997,918.5071617,963.6567345,1095.853948]
# nysted_data_after = [683.4293532,700.6008857,717.7712389,767.5851943,817.3991497,887.4191399,940.3418975,1077.201135]



# Jensne Output data extrapolated from the Nygaard and Hansen, 2016 report
# 278 heading
rodsand_Nygaard = [1338.464679,1139.109337,1027.666082,945.5268561,878.0427861,834.0019395,798.7460200,731.2682316,631.5622927,
                   728.1619417,657.7537504,686.9698362,692.7458394,707.3130514,716.0225983,730.5898103,736.3689544,745.0753605]
nysted_Nygaard_before = [1063.961619,929.0248872,849.7658112,785.1618906,752.7892615,738.0021907,726.1423821,717.2129764]
nysted_Nygaard_after = [896.9286519,841.1127993,794.0881555,755.8578613,738.1372468,726.2805790,717.3511733,708.4217676]

# 98 heading - Uncomment this when wanting to change the sector direction:
# rodsand_Nygaard = [895.3362070,935.7966306,865.8945767,813.0921142,808.4737267,791.4213099,701.3120419,628.2988271,741.8078463,
#                    690.5668611,737.2413508,752.8313569,791.7373793,811.9882300,824.4670751,824.5118909,861.8611535,1073.305697]
# nysted_Nygaard_before = [711.4085728,719.2536988,731.7608487,747.3779801,778.5379431,840.7871072,923.2411268,1067.874728]
# nysted_Nygaard_after = [700.5277652,708.3717118,720.8800410,738.0515736,767.6571354,829.9062996,915.4703007,1055.439519]


# Assigning parameters for recreating the scatter plots from the Nygaard and Hansen, 2016 report.
x = [0, 0.028939, 0.05895, 0.08896, 0.117899, 0.14791, 0.176849, 0.204716, 0.229368, 0.264737, 0.292605, 0.321543, 
     0.350482, 0.379421, 0.407288, 0.436227, 0.464094, 0.493033, 0.673098, 0.720257, 0.766345, 0.813505, 0.860665,
       0.907824, 0.953912, 1];
x_RodsandAlone = [0, 0.028939, 0.05895, 0.08896, 0.117899, 0.14791, 0.176849, 0.204716, 0.229368, 0.264737, 0.292605, 
                  0.321543, 0.350482, 0.379421, 0.407288, 0.436227, 0.464094, 0.493033]
x_nystedAlone = [0.673098, 0.720257, 0.766345, 0.813505, 0.860665, 0.907824, 0.953912, 1]


point_names_RodAlone = ['R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8', 'R9', 'R10',
               'R11', 'R12', 'R13', 'R14', 'R15', 'R16', 'R17', 'R18']
point_names_NysAlone = ['N1','N2','N3','N4','N5','N6','N7','N8']

point_names = ['R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8', 'R9', 'R10',
               'R11', 'R12', 'R13', 'R14', 'R15', 'R16', 'R17', 'R18','N1','N2','N3','N4','N5','N6','N7','N8']
		
#-------------------------------------------------------------------------------------- Model Setup ---------------------------------------------------------------
# Choose the model
model_name = "BPA2014"  # Choose the model: # Jensen1983_LS, BPA2014, Nygaard2022

# Rodsand 2 model setup:
RODwind_farm_model = setup_wind_farm_model(Rod_XRSite, windTurbines, model_name)
# Simulation results given the original farm layout
simulation_results_Rodsand = RODwind_farm_model(Rodsand_x,Rodsand_y, type = [0]*len(Rodsand_x), ws = speedrange) 
# Simulation results given the shifted farm layout
simulation_results_Rodsand_moored = RODwind_farm_model(Rodsand_x,Rodsand_y_moored, type = [0]*len(Rodsand_x), ws = speedrange) 

# Nysted 2 isolated model setup:
Nyswind_farm_model = setup_wind_farm_model(Nys_XRSite, windTurbines, model_name)
# Simulation results given the original farm layout
simulation_results_Nys = Nyswind_farm_model(Nysted_x,Nysted_y, type = [1]*len(Nysted_x), ws = speedrange)
# Simulation results given the shifted farm layout
simulation_results_Nys_moored = Nyswind_farm_model(Nysted_x,Nysted_y_moored, type = [1]*len(Nysted_x), ws = speedrange)

# Model setup for considering both farms:
Twowind_farm_model = setup_wind_farm_model(RodNys_XRSite, windTurbines, model_name)
# Simulation results given the original farm layout
simulation_results_Two = Twowind_farm_model(all_x,all_y, type = types, ws = speedrange)
# Simulation results given the shifted farm layout
simulation_results_Two_moored = Twowind_farm_model(all_x,all_y_moored, type = types, ws = speedrange)

# Looking through the PyWake documentation will allow to use the simulation_results defined functions per farm.
